unit modItemServicoAvulso;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.DBCtrls, Vcl.ComCtrls, JvExComCtrls,
  JvDateTimePicker, JvDBDateTimePicker, Vcl.StdCtrls, Vcl.Mask, JvExMask,
  JvToolEdit, JvMaskEdit, JvCheckedMaskEdit, JvDatePickerEdit,
  JvDBDatePickerEdit, Vcl.ExtCtrls, Vcl.Imaging.pngimage, db;


type
  TfrmItemServicoAvulso = class(TForm)
    imgIncluir: TImage;
    imgSair: TImage;
    grpMensagem: TGroupBox;
    lblMsg: TLabel;
    grpTecnicoResponsavel: TGroupBox;
    cboTecnicoResponsavel: TDBLookupComboBox;
    rdpFormaCobrancaServico: TDBRadioGroup;
    GroupBox5: TGroupBox;
    dtpInicio: TJvDBDatePickerEdit;
    dtpHoraInicio: TJvDBDateTimePicker;
    grpQuantidadeServico: TGroupBox;
    edtQuantidadeServico: TDBEdit;
    grpCustoTotal: TGroupBox;
    edtCustoTotal: TDBEdit;
    grpServicoExecutado: TGroupBox;
    memServico: TDBMemo;
    grpValorServico: TGroupBox;
    edtValorServico: TDBEdit;
    GroupBox6: TGroupBox;
    dtpFim: TJvDBDatePickerEdit;
    dtpHoraFim: TJvDBDateTimePicker;
    procedure FormCreate(Sender: TObject);
    procedure imgSairClick(Sender: TObject);
    procedure imgIncluirClick(Sender: TObject);
    procedure memServicoEnter(Sender: TObject);
    procedure edtValorServicoKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure edtValorServicoKeyPress(Sender: TObject; var Key: Char);
    procedure dtpInicioKeyPress(Sender: TObject; var Key: Char);
    procedure rdpFormaCobrancaServicoClick(Sender: TObject);
    procedure dtpInicioExit(Sender: TObject);
    procedure edtQuantidadeServicoExit(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    function ValidarPeriodo:boolean;
    procedure LimparMSG_ERRO;
    procedure Tratar_Erro_Conexao(pE: exception);
  public
    { Public declarations }
  end;

var
  frmItemServicoAvulso: TfrmItemServicoAvulso;

implementation

{$R *.dfm}

uses dataDBEXMaster, dataMProvider, dataMSource, dataMSProcedure,
  uConstantes_Padrao, uFuncoes;

procedure TfrmItemServicoAvulso.dtpInicioExit(Sender: TObject);
var
  iHoras, iDiferenca_Dias:currency;
begin

  try

    LimparMSG_ERRO;

    if dmMProvider.cdsItens_OS_servico.State in [dsEdit,dsInsert] then
    begin

      if rdpFormaCobrancaServico.ItemIndex = 0 then
      begin

        dtpHoraInicio.Date  := dtpInicio.Date;
        dtpHoraFim.Date     := dtpFim.Date;

        if ValidarPeriodo then
        begin

          iDiferenca_Dias := dtpFim.Date - dtpInicio.Date;
          iHoras          := iDiferenca_Dias * 24;
          iHoras          := iHoras + StrToFloat(calcular_tempo(dtpHoraFim.DateTime,dtpHoraInicio.DateTime));

          dmMProvider.cdsItens_OS_servicoQUANTIDADE.Value   := iHoras;
          dmMProvider.cdsItens_OS_servicoCUSTO_TOTAL.Value  := dmMProvider.cdsItens_OS_servicoQUANTIDADE.Value * dmMProvider.cdsItens_OS_servicoVALOR_CUSTO.Value

        end;

      end;

    end;
  except
    on E: exception do
      Tratar_Erro_Conexao(E);

  end;


end;

procedure TfrmItemServicoAvulso.dtpInicioKeyPress(Sender: TObject;
  var Key: Char);
begin

  if Key = #13 then
  begin

    Key := #0;
    PostMessage(Handle, WM_KEYDOWN, VK_TAB, 1);

  end;

end;

procedure TfrmItemServicoAvulso.edtQuantidadeServicoExit(Sender: TObject);
var
  iHoras, iDiferenca_Dias:currency;
begin

   MudarCorEdit(Sender);

  try

    LimparMSG_ERRO;

    if dmMProvider.cdsItens_OS_servico.State in [dsEdit,dsInsert] then
    begin

      if rdpFormaCobrancaServico.ItemIndex = 1 then
        dmMProvider.cdsItens_OS_servicoCUSTO_TOTAL.Value  := dmMProvider.cdsItens_OS_servicoQUANTIDADE.Value * dmMProvider.cdsItens_OS_servicoVALOR_CUSTO.Value

    end;
  except
    on E: exception do
      Tratar_Erro_Conexao(E);

  end;


end;

procedure TfrmItemServicoAvulso.edtValorServicoKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
var
  iDirecao: Integer;
begin

  // habilita movimentação dos campos com as setas acima/abaixo
  iDirecao := -1;

  case Key of

    VK_DOWN:
      iDirecao := 0; { Próximo }
    VK_UP:
      iDirecao := 1; { Anterior }

  end;

  if iDirecao <> -1 then
  begin

    Perform(WM_NEXTDLGCTL, iDirecao, 0);
    Key := 0;

  end;

end;

procedure TfrmItemServicoAvulso.edtValorServicoKeyPress(Sender: TObject;
  var Key: Char);
begin

  if Key = FormatSettings.DecimalSeparator then
    Key := ',';

  if Key = #13 then
  begin

    Key := #0;
    PostMessage(Handle, WM_KEYDOWN, VK_TAB, 1);

  end;

end;

procedure TfrmItemServicoAvulso.FormCreate(Sender: TObject);
begin

  DesabilitarBotaoFecharForm(self.Handle);
  Color := COR_PADRAO_DIALOGOS;

  dmMSProcedure.fdspMaster.StoredProcName := 'RETORNAR_GNR_ITEM_OS_SERVICO';
  dmMSProcedure.fdspMaster.Prepare;
  dmMSProcedure.fdspMaster.ExecProc;

end;

procedure TfrmItemServicoAvulso.FormShow(Sender: TObject);
begin

  if tag = 0 then
  begin

    dmMProvider.cdsItens_OS_servico.Append;
    dmMProvider.cdsItens_OS_servicoCODIGO_SERVICO.Value := -1;
    dtpInicio.Date      := date;
    dtpHoraInicio.Date  := now;
    dtpFim.Date         := date;
    dtpHoraFim.Date     := now;

  end;

end;

procedure TfrmItemServicoAvulso.imgIncluirClick(Sender: TObject);
begin

  if dmMProvider.cdsItens_OS_servicoFUNCIONARIO.Value <= 0 then
  begin

    lblMsg.Caption := dmDBEXMaster.sNomeUsuario + MSG_CAMPO_OBRIGATORIO;
    Application.ProcessMessages;

    cboTecnicoResponsavel.SetFocus;

  end
  else
    ModalResult := mrOk;

end;

procedure TfrmItemServicoAvulso.imgSairClick(Sender: TObject);
begin

  Close;

end;

procedure TfrmItemServicoAvulso.LimparMSG_ERRO;
begin

  lblMsg.Caption := '';
  Application.ProcessMessages;

end;

procedure TfrmItemServicoAvulso.memServicoEnter(Sender: TObject);
begin

  MudarCorEdit(sender);

end;

procedure TfrmItemServicoAvulso.rdpFormaCobrancaServicoClick(Sender: TObject);
begin

  grpQuantidadeServico.Enabled  := (rdpFormaCobrancaServico.ItemIndex = 1);
  dtpInicio.Date                := date;
  dtpFim.Enabled                := not grpQuantidadeServico.Enabled;
  dtpHoraFim.Enabled            := dtpFim.Enabled;

  if rdpFormaCobrancaServico.ItemIndex = 1 then
  begin

    dmMProvider.cdsItens_OS_servicoQUANTIDADE.Value         := 1;
    dmMProvider.cdsItens_OS_servicoVALOR_CUSTO.Value        := dmMProvider.cdsServicosVALOR.Value;
    dmMProvider.cdsItens_OS_servicoCUSTO_TOTAL.Value        := dmMProvider.cdsItens_OS_servicoQUANTIDADE.Value * dmMProvider.cdsItens_OS_servicoVALOR_CUSTO.Value;
    dmMProvider.cdsItens_OS_servicoHORA_INICIO.Clear;
    dmMProvider.cdsItens_OS_servicoHORA_FIM.Clear;

  end
  else
  begin

    dmMProvider.cdsItens_OS_servicoCUSTO_TOTAL.Value  := 0;
    dtpInicioExit(self);

  end;


end;

procedure TfrmItemServicoAvulso.Tratar_Erro_Conexao(pE: exception);
var
  sChave_Extrang:string;
begin

  if Pos('Unable',pE.Message) > 0then
    lblMsg.Caption := dmDBEXMaster.sNomeUsuario + MSG_ERRO_CONEXAO_BANCO
  else if Pos('FOREIGN',pE.Message) > 0then
  begin

    sChave_Extrang := Trim(Copy(pE.Message,pos('ON TABLE',Uppercase(pE.Message))+ 10,Length(pE.Message)));

    lblMsg.Caption := dmDBEXMaster.sNomeUsuario + ', ' + MSG_ERRO_CHAVE_ESTRANGEIRA
                      + Copy(sChave_Extrang,1,pos('"',sChave_Extrang)-1);

  end
  else if Pos('is not a valid floating point',pE.Message) > 0 then
  begin

    lblMsg.Caption := dmDBEXMaster.sNomeUsuario + MSG_HORA_INICIAL_FINAL;
    dtpHoraFim.SetFocus;

  end
  else
    lblMsg.Caption := dmDBEXMaster.sNomeUsuario + ', ' + pE.Message;

  TocarSomAlerta(ord(SystemHand));


end;

function TfrmItemServicoAvulso.ValidarPeriodo: boolean;
begin

  Result := true;

  if dtpFim.Date < dtpInicio.Date then
  begin

    lblMsg.Caption  := dmDBEXMaster.sNomeUsuario + MSG_DATA_INICIAL_FINAL;
    Result          := false;

  end
  else if dtpFim.Date = dtpInicio.Date then
  begin

    if dtpHoraInicio.Time > dtpHoraFim.Time then
    begin

      lblMsg.Caption  := dmDBEXMaster.sNomeUsuario + MSG_HORA_INICIAL_FINAL;
      dtpHoraFim.SetFocus;
      Result          := false;

    end;

  end;

end;

end.
